{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","Tasks","useState","id","day","reminder","tasks","map","task","AddTask","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","status","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","onDelete","onToggle","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3091e21e.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            style={{ backgroundColor: color }}\r\n            className='btn'\r\n        >\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && (\r\n                <Button\r\n                    color={showAdd ? 'red' : 'green'}\r\n                    text={showAdd ? 'Close' : 'Add'}\r\n                    onClick={onAdd}\r\n                />\r\n            )}\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n// CSS in JS\r\n// const headingStyle = {\r\n//   color: 'red',\r\n//   backgroundColor: 'black',\r\n// }\r\n\r\nexport default Header","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to='/about'>About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import { useState } from \"react\";\r\n\r\nconst Tasks = () => {\r\nconst [tasks, setTasks] = useState([\r\n    {\r\n        id:1,\r\n        text: 'Doctors Appoitment' ,\r\n        day: 'Feb 5th at 2:30pm',\r\n        reminder: true,\r\n    },\r\n    {\r\n        id: 2,\r\n        text: 'Meeting at School',\r\n        day: 'Feb 6th at 1:30pm',\r\n        reminder: true,\r\n    },\r\n    {\r\n        id:3,\r\n        text: 'Food Shopping',\r\n        day: 'Feb 5th at 2:30pm',\r\n        reminder: false,\r\n    },\r\n])\r\n\r\nreturn (\r\n\r\n    <>\r\n    {tasks.map((task) => (\r\n        <h3 key={task.text}></h3>\r\n    ))}\r\n    </>\r\n)\r\n    }   \r\n\r\n    export default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input\r\n                    type='text'\r\n                    placeholder='Add Task'\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input\r\n                    type='text'\r\n                    placeholder='Add Day & Time'\r\n                    value={day}\r\n                    onChange={(e) => setDay(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input\r\n                    type='checkbox'\r\n                    checked={reminder}\r\n                    value={reminder}\r\n                    onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to='/'>Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:3000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:3000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:3000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    const res = await fetch(`http://localhost:3000/tasks/${id}`, {\n      method: 'DELETE',\n    })\n    //We should control the response status to decide if we will change the state or not.\n    res.status === 200\n      ? setTasks(tasks.filter((task) => task.id !== id))\n      : alert('Error Deleting This Task')\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    const res = await fetch(`http://localhost:3000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updTask),\n    })\n\n    const data = await res.json()\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    )\n  }\n\n  return (\n    <Router>\n      <div className='container'>\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        <Route\n          path='/'\n          exact\n          render={(props) => (\n            <>\n              {showAddTask && <AddTask onAdd={addTask} />}\n              {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                />\n              ) : (\n                'No Tasks To Show'\n              )}\n            </>\n          )}\n        />\n        <Route path='/about' component={About} />\n        <Footer />\n      </div>\n    </Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}